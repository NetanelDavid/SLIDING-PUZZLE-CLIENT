{"version":3,"sources":["./src/app/server.service.ts","./src/environments/environment.ts","./src/app/oldService.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { newArray, solution } from \"./oldService\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ServerService {\r\n\r\n  constructor(private client: HttpClient) { }\r\n\r\n  getNewArray(size: number): Observable<number[][]> {\r\n    return of(newArray(size));\r\n  }\r\n\r\n  getSolution(arr: number[][]): Observable<number[]> {\r\n    const newArr = JSON.parse(JSON.stringify(arr))\r\n    return of(JSON.parse(JSON.stringify(solution(newArr))));\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","/**\r\n * @top = 0 \r\n * @down = 1\r\n * @left = 2\r\n * @right = 3\r\n */\r\n\r\nvar N, LENGTH, ARR, OFFSET, INDEX0, OLDINDEX0, HASH, PATH, COUNT_STEP, ALL_HASH, INDEXES_FOR_DELETE_LIST;\r\n\r\nfunction contVariablesForArr(arr) {\r\n    ARR = arr;\r\n    N = ARR.length;\r\n    LENGTH = N * N;\r\n    OFFSET = [-N, N, -1, 1];\r\n    INDEX0 = (INDEX0 = getIndexByValue(0, 0)) >= 0 ? INDEX0 : LENGTH - 1;\r\n}\r\n\r\nexport function newArray(n) {\r\n    n = +n;\r\n    ARR = Array(n).fill(null).map(() => Array(n).fill(null));\r\n\r\n    contVariablesForArr(ARR);\r\n\r\n    for (let i = 0; i < LENGTH; i++) {\r\n        setValueByIndex(i, i != LENGTH - 1 ? i + 1 : 0);\r\n    }\r\n\r\n\r\n    for (let i = 0; i < LENGTH * 1000; i++) {\r\n\r\n        let options = getOptions();\r\n        let random = Math.floor(Math.random() * (options.length));\r\n        replaseByindex(options[random], true)\r\n    }\r\n\r\n    return ARR;\r\n}\r\n\r\nexport function solution(arr) {\r\n\r\n    contVariablesForArr(arr);\r\n\r\n    var currentIndex = 0,\r\n        GoFromBelowNow;\r\n\r\n    INDEXES_FOR_DELETE_LIST = [];\r\n    ALL_HASH = {};\r\n    COUNT_STEP = 0;\r\n    PATH = [];\r\n    HASH = getHashByArr();\r\n    ALL_HASH[HASH] = COUNT_STEP++;\r\n\r\n    return solved();\r\n\r\n    function solved() {\r\n\r\n        while ((currentIndex = findIndexProblem()) != -1) {\r\n\r\n            if (!going(findWay(getIndexByValue(currentIndex + 1, currentIndex), currentIndex)) || (GoFromBelowNow && !GoFromBelow(currentIndex))) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return PATH.filter((v, i) => INDEXES_FOR_DELETE_LIST.every(IFD => IFD.checkIndex(i)));;\r\n    }\r\n\r\n    function findIndexProblem() {\r\n\r\n        for (var i = currentIndex; i < LENGTH - 1; i++) {\r\n\r\n            if (getValueByIndex(i) != i + 1) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    function findWay(from, to) {\r\n\r\n        let axisesFrom = getAxisesByIndex(from),\r\n            axisesTo = getAxisesByIndex(to),\r\n            stepX = axisesFrom.x < axisesTo.x ? 1 : -1,\r\n            res = [from],\r\n            alt = to + N - 1;\r\n\r\n        if (axisesTo.x == N - 1 && !(to == INDEX0 && to + N == from)) {\r\n\r\n            to = alt;\r\n            axisesTo.x--;\r\n            GoFromBelowNow = true;\r\n        }\r\n\r\n        while (from != to) {\r\n\r\n            if (from == alt && axisesFrom.x > 0 && axisesFrom.x < N - 1) {\r\n                GoFromBelowNow = true;\r\n                break;\r\n            }\r\n\r\n            if (axisesFrom.x != axisesTo.x) {\r\n                res.push(from += stepX);\r\n                axisesFrom.x += stepX;\r\n            }\r\n\r\n            if (from - N >= to) {\r\n                res.push(from -= N);\r\n            }\r\n\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    function going(way) {\r\n\r\n        for (let i = 1; i < way.length; i++) {\r\n\r\n            let awy0 = findAwy0(way[i], [way[i - 1]])\r\n\r\n            if (awy0) going0(awy0);\r\n            else return lastLines(currentIndex);\r\n\r\n            replaseByindex(way[i - 1]);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function findAwy0(to, lockedUps, start?) {\r\n\r\n        let from = INDEX0,\r\n            axisesFrom = getAxisesByIndex(from),\r\n            axisesTo = getAxisesByIndex(to),\r\n            awy = [from];\r\n\r\n        start = Number.isFinite(start) ? start : currentIndex;\r\n\r\n        while (from != to) {\r\n\r\n            let stepY = axisesFrom.y > axisesTo.y ? -N : N,\r\n                stepX = axisesFrom.x > axisesTo.x ? -1 : 1;\r\n\r\n            if (\r\n                !checkTarget(from, from + stepX, { lockedUps } as any)\r\n                && !checkTarget(from, from + stepY, { lockedUps } as any)\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            while (\r\n                axisesFrom.y != axisesTo.y\r\n                && checkTarget(from, from + stepY, { start, lockedUps } as any)\r\n            ) {\r\n                awy.push(from += stepY);\r\n                axisesFrom = getAxisesByIndex(from);\r\n            }\r\n\r\n            while (\r\n                axisesFrom.x != axisesTo.x\r\n                && checkTarget(from, from + stepX, { start, lockedUps } as any)\r\n            ) {\r\n                awy.push(from += stepX)\r\n                axisesFrom = getAxisesByIndex(from);\r\n            }\r\n\r\n            if (axisesFrom.y == axisesTo.y\r\n                && axisesFrom.x != axisesTo.x\r\n                && !checkTarget(from, from + stepX, { start, lockedUps } as any)\r\n            ) {\r\n                let count = 0;\r\n                count += downOrTop(false);\r\n                count += leftOrRigth(true);\r\n                if (count < 2) {\r\n                    return false;\r\n                }\r\n            } else if (\r\n                axisesFrom.x == axisesTo.x\r\n                && axisesFrom.y != axisesTo.y\r\n                && !checkTarget(from, from + stepY, { start, lockedUps } as any)\r\n            ) {\r\n                let count = 0;\r\n                count += leftOrRigth(false);\r\n                count += downOrTop(true);\r\n                if (count < 2) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (\r\n                axisesFrom.y != axisesTo.y\r\n                && axisesFrom.x != axisesTo.x\r\n                && !checkTarget(from, from + stepY, { lockedUps, start } as any)\r\n                && !checkTarget(from, from + stepX, { lockedUps, start } as any)\r\n            ) {\r\n\r\n                for (let count = 0, interactions = 0, LOR, DOT; count < 2; interactions++) {\r\n                    if (!LOR) {\r\n                        count += LOR = downOrTop(count);\r\n                    }\r\n                    if (!DOT) {\r\n                        count += DOT = leftOrRigth(count);\r\n                    }\r\n                    if (!count || interactions == 2) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 2; i < awy.length;) {\r\n            if (awy[i] == awy[i - 2]) {\r\n                awy.splice(i - 2, 2);\r\n                i = Math.max(2, --i);\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n\r\n        return awy;\r\n\r\n        function downOrTop(checkDirection) {\r\n\r\n            if (checkDirection) {\r\n\r\n                let direction = axisesFrom.y > axisesTo.y ? 0 : 1,\r\n                    target = from + OFFSET[direction];\r\n\r\n                if (checkTarget(from, target, { start, lockedUps, axis: \"y\" } as any)) {\r\n                    awy.push(from = target);\r\n                    axisesFrom = getAxisesByIndex(from);\r\n                    return 1;\r\n                }\r\n\r\n                return 0;\r\n            }\r\n\r\n            if (checkTarget(from, from + OFFSET[1], { start, lockedUps, axis: \"y\" } as any)) {\r\n                awy.push(from += OFFSET[1]);\r\n                axisesFrom = getAxisesByIndex(from);\r\n                return 1;\r\n            }\r\n\r\n            if (checkTarget(from, from + OFFSET[0], { start, lockedUps, axis: \"y\" } as any)) {\r\n                awy.push(from += OFFSET[0]);\r\n                axisesFrom = getAxisesByIndex(from);\r\n                return 1;\r\n            }\r\n\r\n            return 0;\r\n        }\r\n\r\n        function leftOrRigth(checkDirection) {\r\n\r\n            if (checkDirection) {\r\n\r\n                let direction = axisesFrom.x > axisesTo.x ? 2 : 3;\r\n\r\n                if (checkTarget(from, from + OFFSET[direction], { start, lockedUps, axis: \"x\" } as any)) {\r\n                    awy.push(from += OFFSET[direction]);\r\n                    axisesFrom = getAxisesByIndex(from);\r\n                    return 1;\r\n                }\r\n\r\n                return 0;\r\n            }\r\n\r\n            if (checkTarget(from, from + OFFSET[3], { start, lockedUps, axis: \"x\" } as any)) {\r\n                awy.push(from += OFFSET[3]);\r\n                axisesFrom = getAxisesByIndex(from);\r\n                return 1;\r\n            }\r\n\r\n            if (checkTarget(from, from + OFFSET[2], { start, lockedUps, axis: \"x\" } as any)) {\r\n                awy.push(from += OFFSET[2]);\r\n                axisesFrom = getAxisesByIndex(from);\r\n                return 1;\r\n            }\r\n\r\n            return 0;\r\n\r\n        }\r\n\r\n        function checkTarget(from, to, { start, axis }) {\r\n\r\n            let axisesFrom = getAxisesByIndex(from),\r\n                stepAxis = (to - from) / Math.abs(to - from);\r\n\r\n            return !lockedUps.includes(to)\r\n                && (!Number.isFinite(start) || to >= start)\r\n                && (!axis ||\r\n                    (\r\n                        axisesFrom[axis] + stepAxis >= 0\r\n                        && axisesFrom[axis] + stepAxis < N\r\n                    )\r\n                )\r\n        }\r\n    }\r\n\r\n    function going0(awy) {\r\n        for (let i = 1; i < awy.length; i++) {\r\n            replaseByindex(awy[i]);\r\n        }\r\n    }\r\n\r\n    function GoFromBelow(target) {\r\n\r\n        GoFromBelowNow = false;\r\n\r\n        let awy0 = findAwy0(target + N - 2, [target + N - 1]);\r\n\r\n        if (awy0) going0(awy0);\r\n        else return lastLines(target);\r\n\r\n        for (let i of [0, 3, 1, 3, 0, 2, 2, 1]) {\r\n            repalseByDirection(i);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function lastLines(index, beforeGarbeg?) {\r\n\r\n        GoFromBelowNow = false;\r\n\r\n        let profite, to, garbage, stop, direction,\r\n            startLastLines = N * (N - 2),\r\n            line = getAxisesByIndex(index).y,\r\n            from = new getInfoByValue(index + 1, startLastLines),\r\n            count = 1,\r\n            before = beforeGarbeg || new getInfoByValue(getLinkedInBall(index, -1).index + 1, startLastLines),\r\n            next = { index: null };\r\n\r\n\r\n        while ((next = getLinkedInBall(next.index || from.index, 1)).index != before.index) {\r\n            if ((next as any).value) {\r\n                count++;\r\n            }\r\n        }\r\n        profite = count % 2 + 1;\r\n        if (profite == 2) {\r\n            do {\r\n                before = getLinkedInBall(before.index, 1);\r\n            } while (!before.value);\r\n            count++;\r\n        }\r\n        to = getLinkedInBall(before.index, 1);\r\n\r\n        if (\r\n            (\r\n                to.y >= line\r\n                || to.x == N - 1\r\n                || !getLinkedInBall(to.index, -1).value\r\n            )\r\n            && (\r\n                to.value != from.value\r\n                || to.y != line\r\n            )\r\n        ) {\r\n\r\n            direction = setDirection();\r\n\r\n            while (!(to.x == from.x && !to.value)) {\r\n                replaseByindex(getLinkedInBall(INDEX0, direction).index);\r\n                from = new getInfoByValue(from.value, startLastLines);\r\n                before = new getInfoByValue(before.value, startLastLines);\r\n                to = getLinkedInBall(before.index, 1);\r\n            }\r\n\r\n            replaseByindex(from.index);\r\n\r\n            l: while (true) {\r\n\r\n                if (profite == 2 && line == N - 2) {\r\n\r\n                    garbage = new getInfoByValue(before.value, startLastLines);\r\n\r\n                    if (getAxisesByIndex(index).x == N - 1 && to.x == N - 1) {\r\n                        let lockedUps = [];\r\n                        for (let i = startLastLines; i <= index; i++) {\r\n                            lockedUps.push(getIndexByValue(i + 1, startLastLines))\r\n                        }\r\n                        let awy0 = findAwy0(garbage.index, lockedUps, startLastLines)\r\n\r\n                        if (awy0) {\r\n                            going0(awy0);\r\n                            profite--;\r\n                        }\r\n\r\n                    } else if (garbage.value && garbage.x == getAxisesByIndex(INDEX0).x) {\r\n                        replaseByindex(garbage.index);\r\n                        let beforeGarbage = getLinkedInBall(INDEX0, -1);\r\n                        direction = beforeGarbage.index + 1 == beforeGarbage.value ? -1 : direction;\r\n                        profite--;\r\n                    }\r\n                }\r\n\r\n                replaseByindex(getLinkedInBall(INDEX0, -direction).index);\r\n\r\n                stop = beforeGarbeg ?\r\n                    beforeGarbeg.value - 1\r\n                    : line == N - 2 || profite == 1 ?\r\n                        index\r\n                        : new getInfoByValue(getLinkedInBall(index, -1).index + 1, startLastLines).index;\r\n\r\n                for (let i = startLastLines; i <= stop;) {\r\n                    if (getValueByIndex(i) != ++i) {\r\n                        continue l;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!beforeGarbeg) {\r\n\r\n            if (\r\n                index == LENGTH - 3\r\n                && new getInfoByValue(LENGTH - 2,startLastLines).index > new getInfoByValue(LENGTH - 1,startLastLines).index\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            if (line == N - 1 && index < LENGTH - 2 && profite == 2) {\r\n                before = new getInfoByValue(before.value, startLastLines);\r\n                return lastLines(before.value - 1, getLinkedInBall(before.index, 1));\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n        function getLinkedInBall(index, some) {\r\n\r\n            let axises, step, absSome;\r\n\r\n            while (some) {\r\n\r\n                absSome = Math.abs(some)\r\n                axises = getAxisesByIndex(index);\r\n                step = (axises.y == line ? 1 : -1) * (some / absSome);\r\n                index += axises.x + step < N && axises.x + step >= 0 ? step : N * (axises.y == N - 2 ? 1 : -1);\r\n\r\n                some -= some > 0 ? 1 : -1;\r\n            }\r\n\r\n            return new getInfoByIndex(index);\r\n        }\r\n\r\n        function setDirection() {\r\n            let offtet = count / 2 - 1,\r\n                options1 = (line == N - 2 ? startLastLines : startLastLines + N) + offtet,\r\n                option2 = (line == N - 2 ? LENGTH - 1 : LENGTH - 1 - N) - offtet,\r\n                countSteps = 0,\r\n                nextStep = before.index;\r\n\r\n            while (nextStep != options1 && nextStep != option2) {\r\n                countSteps++;\r\n                nextStep = getLinkedInBall(nextStep, 1).index;\r\n            }\r\n\r\n            return countSteps < N / 2 ? -1 : 1;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function getInfoByValue(value, startSearch) {\r\n\r\n        this.value = value;\r\n        this.index = getIndexByValue(value, startSearch);\r\n\r\n        let axises = getAxisesByIndex(this.index);\r\n\r\n        this.x = axises.x;\r\n        this.y = axises.y;\r\n    }\r\n\r\n    function getInfoByIndex(index) {\r\n\r\n        let axises = getAxisesByIndex(index);\r\n\r\n        this.value = getValueByIndex(index);\r\n        this.index = index;\r\n        this.x = axises.x;\r\n        this.y = axises.y;\r\n    }\r\n}\r\n\r\nfunction repalseByDirection(direction) {\r\n    replaseByindex(INDEX0 + OFFSET[direction]);\r\n}\r\n\r\nfunction replaseByindex(index, notLog?) {\r\n\r\n    let value = getValueByIndex(index);\r\n\r\n    setValueByIndex(INDEX0, value);\r\n    setValueByIndex(index, 0);\r\n \r\n    OLDINDEX0 = INDEX0;\r\n    INDEX0 = index;\r\n\r\n    if (!notLog) {\r\n\r\n        let hash0 = getHashByValue(0),\r\n            hashValue = getHashByValue(value);\r\n\r\n        HASH = HASH.split(hash0).map(h => h.replace(hashValue, hash0)).join(hashValue);\r\n        PATH.push(index);\r\n\r\n        COUNT_STEP++;\r\n\r\n        if (ALL_HASH[HASH] >= 0) {\r\n            new indexesForDelete(ALL_HASH[HASH], COUNT_STEP);\r\n        } else {\r\n            ALL_HASH[HASH] = COUNT_STEP;\r\n        }\r\n    }\r\n\r\n    function indexesForDelete(start, end) {\r\n\r\n        this.start = start;\r\n        this.end = end;\r\n        this.count = end - start;\r\n\r\n        if (INDEXES_FOR_DELETE_LIST.every(ifd => ifd.checkOther(this))) {\r\n            INDEXES_FOR_DELETE_LIST.push(this);\r\n        }\r\n\r\n        this.checkIndex = (i) => {\r\n            return i < this.start - 1 || i > this.end - 2;\r\n        };\r\n\r\n        this.checkOther = (other) => {\r\n\r\n            if (other.start <= this.end && other.count > this.count) {\r\n                this.start = other.start;\r\n                this.end = other.end;\r\n                this.count = this.end - this.start;\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction getOptions() {\r\n\r\n    let indexex0 = getAxisesByIndex(INDEX0);\r\n    let indexesI;\r\n\r\n    return OFFSET.map(i => i + INDEX0)\r\n        .filter(\r\n            i =>\r\n                i >= 0\r\n                && i < LENGTH\r\n                && ((indexesI = getAxisesByIndex(i)).x == indexex0.x || indexesI.y == indexex0.y)\r\n                && i != OLDINDEX0\r\n        );\r\n}\r\n\r\nfunction setValueByIndex(index, value) {\r\n    ARR[Math.floor(index / N)][index % N] = value;\r\n}\r\n\r\nfunction getHashByValue(value) {\r\n    return String.fromCharCode(value);\r\n}\r\n\r\nfunction getHashByArr() {\r\n    let hash = \"\";\r\n    for (let i = 0; i < LENGTH; i++) {\r\n        hash += getHashByValue(getValueByIndex(i));\r\n    }\r\n    return hash;\r\n}\r\n\r\nfunction getValueByIndex(index) {\r\n    return ARR[Math.floor(index / N)][index % N];\r\n}\r\n\r\nfunction getAxisesByIndex(index) {\r\n    return {\r\n        y: Math.floor(index / N),\r\n        x: index % N\r\n    };\r\n}\r\n\r\nfunction getIndexByValue(value, start) {\r\n    for (let i = start; i < LENGTH; i++) {\r\n        if (getValueByIndex(i) == value) {\r\n            return i;\r\n        }\r\n    }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { ServerService } from \"./server.service\";\r\nimport { finalize } from \"rxjs/operators\";\r\n\r\ntype Coordinates = {\r\n  y: number;\r\n  x: number;\r\n}\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.scss\"]\r\n})\r\n\r\nexport class AppComponent {\r\n\r\n  title = \"sliding-puzzle\";\r\n\r\n  public puzzleNumbers: number[][] = [];\r\n  public puzzleSize = 3;\r\n  public isSolutionRunning = false;\r\n  public showSpinner = false;\r\n  public solutionSpeed = -1;\r\n\r\n  private flatIndex0: number;\r\n  private length: number;\r\n  private intervalId: any;\r\n\r\n  constructor(private server: ServerService) {\r\n    this.initPuzzleNumbers();\r\n  }\r\n\r\n  public solvedOrStopSolution() {\r\n    if (this.isSolutionRunning) {\r\n      return this.stopSolution();\r\n    }\r\n    this.solved();\r\n  }\r\n\r\n  public initPuzzleNumbers(puzzleSize?: number) {\r\n\r\n    if (this.isSolutionRunning) {\r\n      this.stopSolution();\r\n    }\r\n\r\n    let puzzleNumbersFromLocalStore = localStorage.getItem(\"puzzleNumbers\");\r\n    if (puzzleNumbersFromLocalStore && !puzzleSize) {\r\n      this.puzzleNumbers = JSON.parse(puzzleNumbersFromLocalStore);\r\n      this.initVariables();\r\n    } else {\r\n      this.showSpinner = true;\r\n      this.server.getNewArray(this.puzzleSize).subscribe((res) => {\r\n        this.puzzleNumbers = JSON.parse(JSON.stringify(res));\r\n        this.showSpinner = false;\r\n        this.initVariables();\r\n        this.saveArrayInLocalStore();\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n  public onClickCell(flatIndex: number) {\r\n    if (this.getReplaceOptions().includes(flatIndex)) {\r\n      this.replace0WithFlatIndex(flatIndex);\r\n      this.saveArrayInLocalStore()\r\n    }\r\n  }\r\n\r\n  private initVariables() {\r\n    this.puzzleSize = this.puzzleNumbers.length;\r\n    this.length = Math.pow(this.puzzleSize, 2);\r\n    this.flatIndex0 = this.getFlatIndex0();\r\n  }\r\n\r\n  private getFlatIndex0(): number {\r\n    for (let i = 0; i < this.length; i++) {\r\n      if (0 === this.getPuzzleNumberByFlatIndex(i)) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  private replace0WithFlatIndex(flatIndex: number) {\r\n    this.setPuzzleNumber(this.flatIndex0, this.getPuzzleNumberByFlatIndex(flatIndex));\r\n    this.setPuzzleNumber(flatIndex, 0);\r\n    this.flatIndex0 = flatIndex;\r\n  }\r\n\r\n  private getReplaceOptions(): number[] {\r\n\r\n    let { x: x0, y: y0 } = this.getCoordinatesForFlatIndex(this.flatIndex0);\r\n\r\n    return [-this.puzzleSize, this.puzzleSize, -1, 1].map(gep => gep + this.flatIndex0)\r\n      .filter((flatIndexOption) => {\r\n        const { y: flatIndexOptionY, x: flatIndexOptionX } = this.getCoordinatesForFlatIndex(flatIndexOption);\r\n        return flatIndexOption >= 0\r\n          && flatIndexOption < this.length\r\n          && (flatIndexOptionY === y0 || flatIndexOptionX === x0)\r\n      });\r\n  }\r\n\r\n  private getPuzzleNumberByFlatIndex(flatIndex: number): number {\r\n    const { y, x } = this.getCoordinatesForFlatIndex(flatIndex);\r\n    return this.puzzleNumbers[y][x];\r\n  }\r\n\r\n  private setPuzzleNumber(flatIndex: number, value: number): void {\r\n    const { y, x } = this.getCoordinatesForFlatIndex(flatIndex);\r\n    this.puzzleNumbers[y][x] = value;\r\n  }\r\n\r\n  private getCoordinatesForFlatIndex(flatIndex: number): Coordinates {\r\n    return {\r\n      y: Math.floor(flatIndex / this.puzzleSize),\r\n      x: flatIndex % this.puzzleSize,\r\n    }\r\n  }\r\n\r\n  private stopSolution(): void {\r\n    this.isSolutionRunning = false;\r\n    clearInterval(this.intervalId)\r\n    this.saveArrayInLocalStore();\r\n  }\r\n\r\n  private saveArrayInLocalStore() {\r\n    localStorage.setItem(\"puzzleNumbers\", JSON.stringify(this.puzzleNumbers));\r\n  }\r\n\r\n  private solved(): void {\r\n    this.showSpinner = true;\r\n    this.server.getSolution(this.puzzleNumbers).pipe(finalize(() => this.showSpinner = false)).subscribe((res) => {\r\n      console.log(`Number of solution steps: ${res.length}`);\r\n      this.isSolutionRunning = true;\r\n\r\n      let i = 0;\r\n      this.intervalId = setInterval(() => {\r\n        if (i < res.length) {\r\n          this.replace0WithFlatIndex(res[i++]);\r\n        } else {\r\n          this.stopSolution();\r\n        }\r\n      }, Math.abs(this.solutionSpeed) * 250);\r\n\r\n    }, () => {\r\n      this.stopSolution();\r\n      setTimeout(() => {\r\n        alert(\"Insoluble board!\");\r\n      }, 15)\r\n    });\r\n  }\r\n\r\n}","<div class=\"row\">\r\n\r\n  <div class=\"col-5 ps-5 my-3\">\r\n    <input [(ngModel)]=\"puzzleSize\" type=\"number\" min=\"3\" max=\"40\" class=\"inputs-width text-center\">\r\n    <select class=\"form-select mt-3 inputs-width\" [(ngModel)]=\"solutionSpeed\">\r\n\r\n      <option *ngFor=\"let item of ['choose a solution speed','faster','medium','slowly'], index as i\" [value]=\"i-1\">\r\n        {{item}}\r\n      </option>\r\n\r\n    </select>\r\n    <div class=\"btn-group inputs-width my-3\">\r\n      <button (click)=\"initPuzzleNumbers(puzzleSize)\" class=\"btn btn-primary col-6\">\r\n        {{ puzzleNumbers.length == puzzleSize ? 'mix' : 'update' }}\r\n      </button>\r\n      <button (click)=\"solvedOrStopSolution()\" class=\"btn col-6\" [ngClass]=\"isSolutionRunning? 'btn-danger' : 'btn-success' \">\r\n        {{isSolutionRunning ? 'stop' :'solve'}}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-2 d-flex justify-content-center pt-4\" >\r\n    <mat-progress-spinner mode=\"indeterminate\" color=\"accent\" [diameter]=\"100\" *ngIf=\"showSpinner\">\r\n    </mat-progress-spinner>\r\n  </div>\r\n\r\n</div>\r\n\r\n<div class=\"row justify-content-center mx-0\">\r\n  <div class=\"game-board\">\r\n    <table class=\"table table-bordered\">\r\n      <tbody>\r\n        <tr *ngFor='let ar of puzzleNumbers; index as i'>\r\n          <td (click)=\"onClickCell(i * n + j)\" *ngFor='let num of ar; index as j' class=\"align-middle text-center cell \"\r\n            [ngClass]=\" 0 === num ? 'zero' : ''\">\r\n            {{num || ''}}\r\n          </td>\r\n        </tr>\r\n\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatProgressSpinnerModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}